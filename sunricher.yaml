blueprint:
  name: Sunricher Dial Controller (ZHA) – Single & Double Press + Dial
  description: |
    Support for Sunricher dial controller (HK-ZRC-K5&RS-TL) via ZHA.
    Handles single & double presses on buttons 1–4 + centre and dial rotations.

  domain: automation

  input:
    remote:
      name: Sunricher remote
      selector:
        device:
          entity:
            - integration: zha
          multiple: false

    button_1_single: { name: Button 1 – Single Press, default: [], selector: { action: {} } }
    button_1_double: { name: Button 1 – Double Press, default: [], selector: { action: {} } }

    button_2_single: { name: Button 2 – Single Press, default: [], selector: { action: {} } }
    button_2_double: { name: Button 2 – Double Press, default: [], selector: { action: {} } }

    button_3_single: { name: Button 3 – Single Press, default: [], selector: { action: {} } }
    button_3_double: { name: Button 3 – Double Press, default: [], selector: { action: {} } }

    button_4_single: { name: Button 4 – Single Press, default: [], selector: { action: {} } }
    button_4_double: { name: Button 4 – Double Press, default: [], selector: { action: {} } }

    centre_single:   { name: Centre – Single Press, default: [], selector: { action: {} } }
    centre_double:   { name: Centre – Double Press, default: [], selector: { action: {} } }

    dial_clockwise_action:
      name: Dial – Clockwise
      default: []
      selector: { action: {} }

    dial_counter_action:
      name: Dial – Counter-clockwise
      default: []
      selector: { action: {} }

trigger:
  - platform: event
    event_type: zha_event
  # This automation triggers on every zha_event from the remote

variables:
  trigger_data: "{{ trigger.event.data }}"
  scene_map: ['button_2', 'button_1', 'button_3', 'button_4']
  button_key: >
    {% if trigger_data.cluster_id == 5 %}
      {{ scene_map[trigger_data.params.scene_id] if trigger_data.params.scene_id < scene_map | length else 'unknown' }}
    {% elif trigger_data.cluster_id == 6 %}
      centre
    {% else %}
      unknown
    {% endif %}

action:
  - choose:
      # Handle buttons (single or double press)
      - conditions:
          - condition: template
            value_template: >
              {{ button_key in ['button_1', 'button_2', 'button_3', 'button_4', 'centre'] }}
        sequence:
          - wait_for_trigger:
              - platform: event
                event_type: zha_event
                # wait for the *same* button press again within 400ms for double press detection
                event_data:
                  device_ieee: "{{ trigger_data.device_ieee }}"
                  cluster_id: "{{ trigger_data.cluster_id }}"
                  command: "{{ trigger_data.command }}"
                  params: "{{ trigger_data.params }}"
            timeout: '00:00:00.4'
            continue_on_timeout: true

          - choose:
              # If a second press detected (wait_for_trigger returned), do double press
              - conditions:
                  - condition: template
                    value_template: "{{ wait.trigger is not none }}"
                sequence:
                  - choose:
                      - conditions: "{{ button_key == 'button_1' }}"
                        sequence: !input button_1_double
                      - conditions: "{{ button_key == 'button_2' }}"
                        sequence: !input button_2_double
                      - conditions: "{{ button_key == 'button_3' }}"
                        sequence: !input button_3_double
                      - conditions: "{{ button_key == 'button_4' }}"
                        sequence: !input button_4_double
                      - conditions: "{{ button_key == 'centre' }}"
                        sequence: !input centre_double

              # Else single press action
              - default:
                  - choose:
                      - conditions: "{{ button_key == 'button_1' }}"
                        sequence: !input button_1_single
                      - conditions: "{{ button_key == 'button_2' }}"
                        sequence: !input button_2_single
                      - conditions: "{{ button_key == 'button_3' }}"
                        sequence: !input button_3_single
                      - conditions: "{{ button_key == 'button_4' }}"
                        sequence: !input button_4_single
                      - conditions: "{{ button_key == 'centre' }}"
                        sequence: !input centre_single

      # Handle dial clockwise rotation
      - conditions:
          - condition: template
            value_template: >
              {% set d = trigger.event.data %}
              {{ d.cluster_id == 8 and d.command == 'step_with_on_off' and d.params is defined and d.params.step_mode == 0 }}
        sequence: !input dial_clockwise_action

      # Handle dial counter-clockwise rotation
      - conditions:
          - condition: template
            value_template: >
              {% set d = trigger.event.data %}
              {{ d.cluster_id == 8 and d.command == 'step' and d.params is defined and d.params.step_mode == 1 }}
        sequence: !input dial_counter_action
