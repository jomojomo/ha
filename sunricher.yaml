blueprint:
  name: Sunricher Dial Controller (ZHA) – Single Press + Dial
  description: |
    Basic support for Sunricher dial controller (HK-ZRC-K5&RS-TL) via ZHA.
    Handles single presses on buttons 1–4 + centre and dial rotations.

  domain: automation

  input:
    remote:
      name: Sunricher remote
      selector:
        device:
          entity:
            - integration: zha
          filter:
            - integration: zha
              manufacturer: Sunricher
              model: HK-ZRC-K5&RS-TL
          multiple: false

    button_1_single: { name: Button 1 – Single, default: [], selector: { action: {} } }
    button_2_single: { name: Button 2 – Single, default: [], selector: { action: {} } }
    button_3_single: { name: Button 3 – Single, default: [], selector: { action: {} } }
    button_4_single: { name: Button 4 – Single, default: [], selector: { action: {} } }
    centre_single:   { name: Centre – Single, default: [], selector: { action: {} } }

    dial_clockwise_action:
      name: Dial – Clockwise
      default: []
      selector: { action: {} }

    dial_counter_action:
      name: Dial – Counter-clockwise
      default: []
      selector: { action: {} }

trigger:
  - platform: event
    event_type: zha_event

variables:
  trigger_data: "{{ trigger.event.data }}"
  button_key: >
    {% if trigger_data.cluster_id == 5 %}
      {% set map = { '0': 'button_1', '1': 'button_2', '2': 'button_3', '3': 'button_4' } %}
      {{ map[trigger_data.params.scene_id | string] }}
    {% elif trigger_data.cluster_id == 6 %}
      centre
    {% else %}
      unknown
    {% endif %}

action:
  - choose:
      # Handle single button presses
      - conditions:
          - condition: template
            value_template: >
              {{ button_key in ['button_1', 'button_2', 'button_3', 'button_4', 'centre'] }}
        sequence:
          - choose:
              - conditions: "{{ button_key == 'button_1' }}"
                sequence: !input button_1_single
              - conditions: "{{ button_key == 'button_2' }}"
                sequence: !input button_2_single
              - conditions: "{{ button_key == 'button_3' }}"
                sequence: !input button_3_single
              - conditions: "{{ button_key == 'button_4' }}"
                sequence: !input button_4_single
              - conditions: "{{ button_key == 'centre' }}"
                sequence: !input centre_single

      # Handle dial clockwise rotation
      - conditions:
          - condition: template
            value_template: >
              {{ trigger_data.cluster_id == 8 and
                 trigger_data.command == 'step_with_on_off' and
                 trigger_data.params.step_mode == 0 }}
        sequence: !input dial_clockwise_action

      # Handle dial counter-clockwise rotation
      - conditions:
          - condition: template
            value_template: >
              {{ trigger_data.cluster_id == 8 and
                 trigger_data.command == 'step' and
                 trigger_data.params.step_mode == 1 }}
        sequence: !input dial_counter_action
